{"version":3,"sources":["utils/enum/elementIds.enum.ts","utils/functions/votationMethod/average.ts","utils/functions/index.ts","utils/functions/operations/half.ts","utils/functions/operations/double.ts","utils/functions/operations/square.ts","utils/functions/operations/cube.ts","utils/functions/votationMethod/averageQuantity.ts","utils/functions/votationMethod/quantity.ts","utils/theme/Colors.ts","lib/tmr/OperationModule/OperationModuleConfig.ts","lib/tmr/OperationModule/OperationModule.ts","utils/array/getModulesPerIteration.ts","components/InputGeneratorConfig/styles.ts","components/InputGeneratorConfig/index.tsx","components/OperationModuleConfig/styles.ts","components/OperationModuleConfig/index.tsx","components/RunConfig/styles.ts","components/Voter/styles.ts","components/RunConfig/index.tsx","components/Results/styles.ts","components/Results/index.tsx","components/Statistics/styles.ts","components/Statistics/index.tsx","components/Benchmarking/styles.ts","components/Benchmarking/index.tsx","components/Colaborators/styles.ts","components/Colaborators/index.tsx","styles.ts","App.tsx","reportWebVitals.ts","stores/other.store.ts","lib/tmr/InputGenerator/InputGeneratorConfig.ts","lib/tmr/InputGenerator/InputGenerator.ts","lib/tmr/Statistics/TMRResultStatistics.ts","lib/tmr/TMRResult.ts","lib/tmr/Voter/Voter.ts","lib/tmr/TMR.ts","stores/tmr.store.ts","stores/user.store.ts","stores/index.ts","index.tsx"],"names":["ELEMENT_IDS","average","numberArr","length","reduce","curr","total","closestMinimum","closestMaximum","alreadySelectedClosestMaximum","forEach","output","operationFunctions","half","input","double","square","cube","Math","pow","votingMethodsFunctions","averageVoting","r","abs","averageQuantityVoting","averageVotingResult","closestMaximumCount","closestMinimumCount","item","quantityVoting","sort","a","b","filter","v","pop","Primary","PureWhite","WarningColor","GradientSecondary","GradientPrimary","OperationModuleConfig","options","deviationChance","deviationMaxThreshold","deviationMinThreshold","operationName","this","OperationModule","config","_operation","_configuration","fn","configuration","result","random","getModulesPerIteration","modules","modulesArray","i","push","Wrapper","styled","div","Title","h2","InputWrapper","SubWrapper","Label","h4","TextInput","InputGenerator","maxInputProps","minInputProps","inputWrapperProps","minValue","maxValue","onChangeMinValue","onChangeMaxValue","value","onChange","target","Number","defaultHandleMinChange","maxLength","type","defaultHandleMaxChange","SubLabel","h6","Select","select","Option","option","functionsKeys","Object","keys","Module","operationValue","deviationChanceValue","handleOperationNameChange","handleDeviationChanceChange","deviationMaxThresholdValue","deviationMinThresholdValue","handleDeviationMaxThresholdChange","handleDeviationMinThresholdChange","max","min","console","warn","map","key","h3","votingMethods","RunConfig","iterationInputProps","votingValue","handleVotingChange","handleIterationChange","handleModulePerIterationChange","iterationsValue","modulePerIterationValue","defaultHandleIterationChange","defaultHandleModulePerIterationChange","ResultsTitleWrapper","ResultsTitle","h1","ResultsSubTitle","ResultsWrapper","error","IterationWrapper","IterationIndex","ModulesWrapper","ModuleWrapper","Results","results","iterationResult","index","expectedResult","processedOutputs","voterResult","TitleWrapper","SubTitle","SuccessPercentageWrapper","SuccessPercentage","p","TotalsWrapper","SubTotalsWrapper","TotalWrapper","h5","ChartsWrapper","ChartWrapper","ChartTitle","SubChartWrapper","Statistics","statistics","general","successPercentage","toFixed","totals","failedModuleOutputs","failedVotingResults","successVotingResults","BarChart","width","height","data","statisticsPerIteration","margin","top","right","left","bottom","Tooltip","CartesianGrid","strokeDasharray","XAxis","stroke","dataKey","YAxis","Legend","verticalAlign","wrapperStyle","lineHeight","ReferenceLine","y","Bar","fill","TopicWrapper","Topic","PercentagesWrapper","TotalsSubWrapper","PercentageWrapper","ChartArrayWrapper","Benchmarking","benchmarkingResults","votingMethod","Text","ColaboratorsWrapper","AvatarWrapper","Avatar","img","Name","contributors","image","name","Colaborators","src","ConfigTitle","ConfigWrapper","ButtonWrapper","RunButton","button","inject","observer","tmrStore","handleMaxMinChange","iterations","minOrMax","setInputGeneratorConfig","handleClick","run","log","inputGeneratorConfig","maximum","minimum","operationModuleConfig","setOperationModuleConfig","setTMRRunConfig","tmrConfig","setModulesPerIteration","modulesPerIteration","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","OtherStore","persist","makeAutoObservable","observable","action","local","altitude","InputGeneratorConfig","_config","TMRResultStatistics","TMRResult","failedModulesInIteration","moduleOutput","iteration","Voter","outputs","TMR","defaultOperationModuleConfig","_inputGenerator","GenerateRandomInput","_modules","_currentOperationModuleConfig","_voter","inputGenerator","operationModule","module","obj","runConfig","runResult","randomInput","iterationOutputs","DoOperation","votingResult","DoVote","GenerateStatistics","TMRStore","comparisonResults","tmr","AddOperationModule","Run","setBenchmarkingData","generateVotingMethodCoparisonResult","setResults","setStatistics","UserStore","idade","nome","globalStore","otherStore","userStore","hydrate","create","storage","localStorage","ReactDOM","render","StrictMode","stores","document","getElementById"],"mappings":"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","file":"static/js/main.6f04a7be.chunk.js","sourcesContent":["enum ELEMENT_IDS {\n  COMPONENT_INPUT = \"COMPONENT_INPUT\",\n}\n\nexport default ELEMENT_IDS;\n","export const average = (numberArr: number[]) : { closestMinimum: number, closestMaximum: number, average: number } => {\n    var average = numberArr.length > 0 ? numberArr.reduce((curr, total) => curr + total) / numberArr.length : 0\n    var closestMinimum: number = 0\n    var closestMaximum: number = 0\n\n    var alreadySelectedClosestMaximum: boolean = false\n    numberArr.forEach(output => {\n        if (output >= closestMinimum && output <= average)\n            closestMinimum = output\n        \n        if (output >= average  && !alreadySelectedClosestMaximum){\n            alreadySelectedClosestMaximum = true\n            closestMaximum = output\n        }\n    })\n\n    return { closestMaximum: closestMaximum, closestMinimum: closestMinimum, average: average };\n}\n\nexport const averageVoting = (numberArr: number[]) => {\n    var r = average(numberArr);\n    return Math.abs(r.closestMinimum - r.average) < Math.abs(r.closestMaximum - r.average) ? r.closestMinimum : r.closestMaximum\n};\n","import { cube, double, half, square } from './operations';\n\nimport { averageVoting, averageQuantityVoting, quantityVoting } from './votationMethod';\n\nexport const operationFunctions = {\n  half,\n  double,\n  square,\n  cube\n};\n\nexport type OperationFunctionsType = typeof operationFunctions;\nexport type OperationFunctionsKeys = keyof OperationFunctionsType;\n\nexport const votingMethodsFunctions = {\n  averageVoting,\n  averageQuantityVoting,\n  quantityVoting\n};\n\nexport type VotingMethodsFunctionsType = typeof votingMethodsFunctions;\nexport type VotingMethodsFunctionsKeys = keyof VotingMethodsFunctionsType;\n","const half = (input: number): number => input / 2;\n\nexport default half;\n","const double = (input: number): number => input * 2;\n\nexport default double;\n","const square = (input: number): number => input * input;\n\nexport default square;\n","const cube = (input: number): number => Math.pow(input, 3);\n\nexport default cube;\n","import { average } from \".\";\n\nconst averageQuantityVoting = (numberArr: number[]) => {\n  var averageVotingResult = average(numberArr);\n  var closestMaximumCount = 0\n  var closestMinimumCount = 0\n  numberArr.forEach(item => {\n      if (averageVotingResult.closestMaximum === item)\n          closestMaximumCount++\n      else if(averageVotingResult.closestMinimum === item)\n          closestMinimumCount++\n  })\n  return closestMinimumCount >= closestMaximumCount ? averageVotingResult.closestMinimum : averageVotingResult.closestMaximum;\n};\n\nexport default averageQuantityVoting;\n","const quantityVoting = (numberArr: number[]) : number => \n  numberArr.sort((a,b) => numberArr.filter(v => v===a).length - numberArr.filter(v => v===b).length).pop() || 0;\n\nexport default quantityVoting;\n","// Generic\nexport const Primary = \"#226b73\";\nexport const Secondary = \"#5bcedb\";\nexport const Shadow = \"#000000\";\nexport const PureWhite = \"#fff\";\nexport const ErrorColor = \"#f00\"\nexport const WarningColor = \"#ff8800\"\n\n// Background gradient\nexport const GradientSecondary = \"#2c646a\";\nexport const GradientPrimary = \"#000000\";\n","import { OperationFunctionsKeys } from \"../../../utils\";\nimport IOperationModuleConfig from \"./IOperationModuleConfig\";\n\nexport default class OperationModuleConfig implements IOperationModuleConfig{\n    public deviationChance: number;\n    public deviationMaxThreshold: number;\n    public deviationMinThreshold: number;\n    public operationName: OperationFunctionsKeys;\n\n    constructor(\n        options?: {\n            deviationChance?: number, \n            deviationMaxThreshold?: number, \n            deviationMinThreshold?: number,\n            operationName?: OperationFunctionsKeys\n        }\n    ){\n        this.deviationChance = options?.deviationChance ?? 10\n        this.deviationMinThreshold = options?.deviationMinThreshold ?? 0.1\n        this.deviationMaxThreshold = options?.deviationMaxThreshold ?? 5\n        this.operationName = options?.operationName ?? \"double\"\n    }\n}","import { operationFunctions } from \"../../../utils\";\nimport IOperationModule from \"./IOperationModule\";\nimport IOperationModuleConfig from \"./IOperationModuleConfig\";\nimport OperationModuleConfig from \"./OperationModuleConfig\";\n\nexport default class OperationModule implements IOperationModule\n{\n    private _operation: (input: number) => number = () => 0;\n\n    private _configuration: IOperationModuleConfig = {\n        deviationChance: 0,\n        deviationMaxThreshold: 0,\n        deviationMinThreshold: 0,\n        operationName: 'double',\n    };\n\n    constructor(config?: IOperationModuleConfig, ) {\n        this._configuration = config ?? new OperationModuleConfig();\n    }\n\n    get operation(){\n        return this._operation\n    }\n    set operation(fn: (input: number) => number){\n        this._operation = fn;\n    }\n\n    get configuration(){\n        return this._configuration\n    }\n    set configuration(configuration: IOperationModuleConfig){\n        this._configuration = configuration;\n        this._operation = operationFunctions[this._configuration.operationName]\n    }\n\n    public DoOperation(input: number): number{\n        var result = this._operation(input)\n        //Altera o resultado\n        if (Math.random() * 100 < this._configuration.deviationChance){\n            var randomThresholdDeviation = Math.random() * ( this._configuration.deviationMaxThreshold - this._configuration.deviationMinThreshold + 1) + this._configuration.deviationMinThreshold \n            result *= randomThresholdDeviation\n        }\n        return result;\n    }\n\n}","import OperationModule from \"../../lib/tmr/OperationModule/OperationModule\";\n\nexport const getModulesPerIteration = (modules: number): OperationModule[] => {\n  const modulesArray = [];\n  var i = 0;\n\n  while (i < modules) {\n    modulesArray.push(new OperationModule());\n    i++;\n  }\n\n  return modulesArray;\n}","import styled from 'styled-components';\nimport { Primary } from '../../utils';\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Title = styled.h2``;\n\nexport const InputWrapper = styled.div`\n  padding: 16px;\n  margin: 12px;\n  border: 2px solid #f7f7f7;\n  background-color: ${Primary};\n  border-radius: 12px;\n  -webkit-box-shadow: 5px 5px 20px -4px #000000; \n  box-shadow: 5px 5px 20px -4px #000000;\n`;\n\nexport const SubWrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.h4``;\n\nexport const TextInput = styled.input`\n  border: 2px solid #f7f7f7;\n  border-radius: 6px;\n  width: 50px;\n  padding: 6px;\n  margin: 4px;\n  background-color: transparent;\n`;\n","import React, { FC } from 'react';\nimport { InputWrapper, Label, SubWrapper, TextInput, Title, Wrapper } from './styles';\n\ntype Props = {\n  maxInputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n  minInputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n  inputWrapperProps?: React.HTMLAttributes<HTMLDivElement>;\n  onChangeMinValue?: (min: number) => void;\n  minValue?: number;\n  onChangeMaxValue?: (max: number) => void;\n  maxValue?: number;\n};\n\nconst InputGenerator: FC<Props> = ({ maxInputProps,\n  minInputProps,\n  inputWrapperProps,\n  minValue,\n  maxValue,\n  onChangeMinValue,\n  onChangeMaxValue,\n}) => {\n  const defaultHandleMaxChange = (target: EventTarget & HTMLInputElement) => {\n    if (onChangeMaxValue) onChangeMaxValue(Number(target.value));\n  };\n\n  const defaultHandleMinChange = (target: EventTarget & HTMLInputElement) => {\n    if (onChangeMinValue) onChangeMinValue(Number(target.value));\n  };\n\n  return (\n    <Wrapper>\n      <Title>InputGenerator</Title>\n      <InputWrapper {...inputWrapperProps}>\n        <SubWrapper>\n          <Label>Min</Label>\n          <TextInput\n            value={minValue}\n            onChange={({target}) => defaultHandleMinChange(target)}\n            maxLength={4}\n            type=\"number\"\n            {...maxInputProps}\n          />\n        </SubWrapper>\n        <SubWrapper>\n          <Label>Max</Label>\n          <TextInput\n            value={maxValue}\n            onChange={({target}) => defaultHandleMaxChange(target)}\n            maxLength={4}\n            type=\"number\"\n            {...minInputProps}\n          />\n        </SubWrapper>\n      </InputWrapper>\n    </Wrapper>\n  );\n};\n\nexport default InputGenerator;\n","import styled from 'styled-components';\nimport { Primary } from '../../utils';\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Title = styled.h2``;\n\nexport const InputWrapper = styled.div`\n  flex-direction: column;\n  padding: 16px;\n  margin: 12px;\n  border: 2px solid #f7f7f7;\n  background-color: ${Primary};\n  border-radius: 12px;\n  -webkit-box-shadow: 5px 5px 20px -4px #000000; \n  box-shadow: 5px 5px 20px -4px #000000;\n`;\n\nexport const SubWrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.h4``;\n\nexport const SubLabel = styled.h6``;\n\nexport const TextInput = styled.input`\n  border: 2px solid #f7f7f7;\n  border-radius: 6px;\n  width: 50px;\n  padding: 6px;\n  margin: 4px;\n  background-color: transparent;\n`;\n\nexport const SelectInput = styled.input`\n  border: 2px solid #f7f7f7;\n  border-radius: 6px;\n  width: 100px;\n  padding: 6px;\n  margin: 4px;\n  background-color: transparent;\n`;\n\nexport const Select = styled.select`\n  outline: none;\n  border: 2px solid #f7f7f7;\n  border-radius: 6px;\n  width: 100px;\n  padding: 6px;\n  margin: 4px;\n  background-color: transparent;\n\n  color: #f7f7f7;\n`;\n\nexport const Option = styled.option`\n  color: #000;\n`;\n","import React, { FC } from 'react';\nimport { operationFunctions, OperationFunctionsKeys } from '../../utils';\nimport {\n  InputWrapper,\n  Label,\n  Option,\n  Select,\n  SubLabel,\n  SubWrapper,\n  TextInput,\n  Title,\n  Wrapper\n} from './styles';\n\ntype Props = {\n  maxInputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n  minInputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n  inputWrapperProps?: React.HTMLAttributes<HTMLDivElement>;\n  operationValue?: OperationFunctionsKeys;\n  handleOperationNameChange?: (operation: OperationFunctionsKeys) => void;\n  deviationChanceValue?: number;\n  handleDeviationChanceChange?: (value: number) => void;\n  deviationMaxThresholdValue?: number;\n  handleDeviationMaxThresholdChange?: (value: number) => void;\n  deviationMinThresholdValue?: number;\n  handleDeviationMinThresholdChange?: (value: number) => void;\n};\n\nconst functionsKeys = Object.keys(operationFunctions);\n\nconst Module: FC<Props> = ({\n  maxInputProps,\n  minInputProps,\n  inputWrapperProps,\n  operationValue = \"double\",\n  deviationChanceValue,\n  handleOperationNameChange,\n  handleDeviationChanceChange,\n  deviationMaxThresholdValue,\n  deviationMinThresholdValue,\n  handleDeviationMaxThresholdChange,\n  handleDeviationMinThresholdChange,\n}) => {\n  const defaultHandleOperationNameChange = (value: string) => {\n    if (handleOperationNameChange) {\n      handleOperationNameChange(value as OperationFunctionsKeys);\n      return;\n    }\n    console.warn(\"No function passed on 'handleOperationNameChange'\");\n  };\n\n  const defaultHandleDeviationChanceChange = (value: string) => {\n    if (handleDeviationChanceChange) {\n      handleDeviationChanceChange(Number(value));\n      return;\n    }\n    console.warn(\"No function passed on 'handleDeviationChanceChange'\");\n  };\n\n  const defaultHandleDeviationMaxThresholdChange = (value: string) => {\n    if (handleDeviationMaxThresholdChange) {\n      handleDeviationMaxThresholdChange(Number(value));\n      return;\n    }\n    console.warn(\"No function passed on 'handleDeviationChanceChange'\");\n  };\n\n  const defaultHandleDeviationMinThresholdChange = (value: string) => {\n    if (handleDeviationMinThresholdChange) {\n      handleDeviationMinThresholdChange(Number(value));\n      return;\n    }\n    console.warn(\"No function passed on 'handleDeviationChanceChange'\");\n  };\n\n  return (\n    <Wrapper>\n      <Title>Module</Title>\n      <InputWrapper {...inputWrapperProps} >\n        <SubWrapper>\n          <Label>DeviationChance</Label>\n          <SubLabel>(0 - 100)</SubLabel>\n          <TextInput\n            maxLength={3}\n            max=\"100\"\n            min=\"0\"\n            type=\"number\"\n            value={deviationChanceValue}\n            onChange={({target}) => defaultHandleDeviationChanceChange(target.value)}\n            {...maxInputProps}\n          />\n        </SubWrapper>\n        <SubWrapper>\n          <Label>DeviationMaxThreshold</Label>\n          <TextInput\n            maxLength={4}\n            type=\"number\"\n            value={deviationMaxThresholdValue}\n            onChange={({target}) => defaultHandleDeviationMaxThresholdChange(target.value)}\n            {...minInputProps}\n          />\n        </SubWrapper>\n        <SubWrapper>\n          <Label>DeviationMinThreshold</Label>\n          <TextInput\n            maxLength={4}\n            type=\"number\"\n            value={deviationMinThresholdValue}\n            onChange={({target}) => defaultHandleDeviationMinThresholdChange(target.value)}\n            {...minInputProps}\n          />\n        </SubWrapper>\n        <SubWrapper>\n          <Label>OperationName</Label>\n          <Select\n            value={operationValue}\n            onChange={({ target }) => defaultHandleOperationNameChange(target.value)}\n          >\n            {functionsKeys.map((key) => <Option key={key} value={key}>{key}</Option>)}\n          </Select>\n        </SubWrapper>\n      </InputWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Module;\n","import styled from 'styled-components';\nimport { Primary } from '../../utils';\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Title = styled.h2``;\n\nexport const InputWrapper = styled.div`\n  flex-direction: column;\n  padding: 16px;\n  margin: 12px;\n  border: 2px solid #f7f7f7;\n  background-color: ${Primary};\n  border-radius: 12px;\n  -webkit-box-shadow: 5px 5px 20px -4px #000000; \n  box-shadow: 5px 5px 20px -4px #000000;\n`;\n\nexport const SubWrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.h4``;\n\nexport const SubLabel = styled.h6``;\n\nexport const TextInput = styled.input`\n  border: 2px solid #f7f7f7;\n  border-radius: 6px;\n  width: 50px;\n  padding: 6px;\n  margin: 4px;\n  background-color: transparent;\n`;\n\nexport const SelectInput = styled.input`\n  border: 2px solid #f7f7f7;\n  border-radius: 6px;\n  padding: 6px;\n  margin: 4px;\n  background-color: transparent;\n`;\n\nexport const Select = styled.select`\n  outline: none;\n  border: 2px solid #f7f7f7;\n  border-radius: 6px;\n  padding: 6px;\n  margin: 4px;\n  background-color: transparent;\n\n  color: #f7f7f7;\n`;\n\nexport const Option = styled.option`\n  color: #000;\n`;\n","import styled from 'styled-components';\n\nexport const VoterWrapper = styled.div``;\n\nexport const VoterTitle = styled.h3``;\n","import React, { FC } from 'react';\nimport { votingMethodsFunctions, VotingMethodsFunctionsKeys } from '../../utils';\nimport { InputWrapper, Label, Option, Select, SubLabel, SubWrapper, TextInput, Title, Wrapper } from './styles';\n\ntype Props = {\n  iterationInputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n  inputWrapperProps?: React.HTMLAttributes<HTMLDivElement>;\n  iterationsValue?: number;\n  votingValue?: VotingMethodsFunctionsKeys;\n  modulePerIterationValue?: number;\n  handleVotingChange?: (votingMethod: VotingMethodsFunctionsKeys) => void;\n  handleIterationChange?: (iterations: number) => void;\n  handleModulePerIterationChange?: (modules: number) => void;\n};\n\nconst votingMethods = Object.keys(votingMethodsFunctions);\n\nconst RunConfig: FC<Props> = ({\n  iterationInputProps,\n  inputWrapperProps,\n  votingValue = \"0\",\n  handleVotingChange,\n  handleIterationChange,\n  handleModulePerIterationChange,\n  iterationsValue = 0,\n  modulePerIterationValue = 0,\n}) => {\n  const defaultHandleChange = (value: VotingMethodsFunctionsKeys) => {\n    if (handleVotingChange) {\n      handleVotingChange(value);\n      return;\n    }\n    console.warn(\"No function passed on 'handleChange'\");\n  };\n\n  const defaultHandleIterationChange = (target: EventTarget & HTMLInputElement) => {\n    if (handleIterationChange) handleIterationChange(Number(target.value));\n  };\n\n  const defaultHandleModulePerIterationChange = (target: EventTarget & HTMLInputElement) => {\n    if (handleModulePerIterationChange) handleModulePerIterationChange(Number(target.value));\n  };\n\n  return (\n    <Wrapper>\n      <Title>RunConfig</Title>\n      <InputWrapper {...inputWrapperProps} >\n        <SubWrapper>\n          <Label>Iterations</Label>\n          <SubLabel>(0 - 1000)</SubLabel>\n          <TextInput\n            onChange={({target}) => defaultHandleIterationChange(target)}\n            maxLength={4}\n            max=\"1000\"\n            min=\"0\"\n            type=\"number\"\n            value={iterationsValue}\n            {...iterationInputProps}\n          />\n        </SubWrapper>\n        <SubWrapper>\n          <Label>VotingMethod</Label>\n          <Select value={votingValue} onChange={({ target }) => defaultHandleChange(target.value as VotingMethodsFunctionsKeys)}>\n            {votingMethods.map((key) => <Option key={key} value={key}>{key}</Option>)}\n          </Select>\n        </SubWrapper>\n        <SubWrapper>\n          <Label>ModulesPerIteration</Label>\n          <SubLabel>(3 - 100)</SubLabel>\n          <TextInput\n            onChange={({target}) => defaultHandleModulePerIterationChange(target)}\n            maxLength={3}\n            max=\"100\"\n            min=\"3\"\n            type=\"number\"\n            value={modulePerIterationValue}\n          />\n        </SubWrapper>\n      </InputWrapper>\n    </Wrapper>\n  );\n};\n\nexport default RunConfig;\n","import styled from 'styled-components';\nimport { ErrorColor, PureWhite, WarningColor } from '../../utils';\n\ntype LabelProps = {\n  error?: boolean;\n};\n\ntype ModuleProps = {\n  error?: boolean;\n};\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n`;\n\nexport const ResultsTitleWrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ResultsTitle = styled.h1``;\n\nexport const ResultsSubTitle = styled.h3``;\n\nexport const ResultsWrapper = styled.div`\n  flex-direction: column;\n`;\n\nexport const Label = styled.h4<LabelProps>`\n  background-color: ${({ error = false }) => error ? ErrorColor : 'transparent'};\n  border-radius: 6px;\n  padding: 2px 6px;\n  font-weight: ${({ error = false }) => error ? 900 : 700};\n`;\n\nexport const IterationWrapper = styled.div`\n  flex-direction: column;\n  border: 2px solid ${PureWhite};\n  margin: 6px;\n  padding: 6px 10px;\n  border-radius: 10px;\n`;\n\nexport const IterationIndex = styled.h2``;\n\nexport const ModulesWrapper = styled.div`\n  overflow-x: auto;\n  margin: 12px;\n`;\n\nexport const ModuleWrapper = styled.div<ModuleProps>`\n  flex-direction: column;\n  border: 2px solid ${({ error = false }) => error ? WarningColor : PureWhite};\n  background-color: ${({ error = false }) => error ? WarningColor : 'transparent'};\n  margin: 6px;\n  padding: 6px;\n  border-radius: 6px;\n`;\n","import { FC } from 'react';\nimport { Label, IterationWrapper, ResultsWrapper, Wrapper, ModuleWrapper, ModulesWrapper, IterationIndex, ResultsTitle, ResultsSubTitle, ResultsTitleWrapper } from './styles'; \n\ntype Props = {\n  results?: ModuleIterationResultType[];\n};\n\nconst Results: FC<Props> = ({ results }) => {\n  if (results)\n    return (\n      <Wrapper>\n        <ResultsTitleWrapper>\n          <ResultsTitle>Results</ResultsTitle>\n        </ResultsTitleWrapper>\n        <ResultsWrapper>\n          {results.map((iterationResult, index) => (\n            \n            <IterationWrapper>\n              <IterationIndex>Iteration {index + 1}</IterationIndex>\n              <Label>ExpectedValue: {iterationResult.expectedResult}</Label>\n              <Label>Input: {iterationResult.input}</Label>\n              <ModulesWrapper>\n                {iterationResult.processedOutputs.map((value, index) => (\n                  <ModuleWrapper error={value !== iterationResult.expectedResult}>\n                    <Label>Module: {index + 1}</Label>\n                    <Label>GeneratedValue: {value}</Label>\n                  </ModuleWrapper>\n                ))}\n              </ModulesWrapper>\n              <Label error={iterationResult.voterResult !== iterationResult.expectedResult}>Voted: {iterationResult.voterResult}</Label>\n            </IterationWrapper>\n          ))}\n        </ResultsWrapper>\n      </Wrapper>\n    );\n\n  return (\n    <Wrapper>\n      <ResultsTitleWrapper>\n        <ResultsTitle>Results</ResultsTitle>\n        <ResultsSubTitle>You must run to generate results!</ResultsSubTitle>\n      </ResultsTitleWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Results;\n","import styled from \"styled-components\";\nimport { PureWhite } from \"../../utils\";\n\nconst defaultChartWidth = 850;\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  padding-top: 48px;\n`;\n\nexport const TitleWrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Title = styled.h1``;\n\nexport const SubTitle = styled.h3``;\n\nexport const SuccessPercentageWrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 500px;\n  /* margin: 96px; */\n`;\n\nexport const SuccessTitle = styled.h2`\n  font-size: 2rem;\n`;\n\nexport const SuccessPercentage = styled.p`\n  font-size: 4rem;\n`;\n\nexport const TotalsWrapper = styled.div`\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: 300px;\n`;\n\nexport const SubTotalsWrapper = styled.div`\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const TotalWrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n  border: 2px solid ${PureWhite};\n  border-radius: 6px;\n  padding: 6px;\n  margin: 12px;\n`;\n\nexport const Label = styled.h5``;\n\nexport const SubLabel = styled.h6``;\n\nexport const ChartsWrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n  /* background-color: #000; */\n  padding: 24px 0;\n`;\n\nexport const ChartWrapper = styled.div`\n  width: 100%;\n  padding-top: 24px;\n  flex-direction: column;\n  align-items: center;\n  overflow-x: auto;\n\n  @media (max-width: ${defaultChartWidth}px){\n    align-items: unset;\n  }\n`;\n\nexport const ChartTitle = styled.h3`\n\n`;\n\nexport const SubChartWrapper = styled.div`\n  display: flex;\n  width: ${defaultChartWidth}px;\n  justify-content: center;\n`;\n","import React, { FC } from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ReferenceLine, Tooltip, XAxis, YAxis } from 'recharts';\nimport { PureWhite, WarningColor } from '../../utils';\nimport { Wrapper, Title, SuccessPercentageWrapper, SuccessPercentage, TotalsWrapper, SubTitle, TitleWrapper, Label, TotalWrapper, SubTotalsWrapper, ChartsWrapper, ChartWrapper, ChartTitle, SubChartWrapper } from './styles';\n\ntype Props = {\n  statistics?: TMRResultStatistics;\n};\n\nconst Statistics: FC<Props> = ({ statistics }) => {\n  if (statistics)\n    return (\n      <Wrapper>\n        <TitleWrapper>\n          <Title>Statistics</Title>\n        </TitleWrapper>\n        <SuccessPercentageWrapper>\n          <SubTitle>SuccessPercentage</SubTitle>\n          <SuccessPercentage>{statistics?.general.successPercentage.toFixed(2)}%</SuccessPercentage>\n        </SuccessPercentageWrapper>\n        <TotalsWrapper>\n          <SubTitle>Totals</SubTitle>\n          <SubTotalsWrapper>\n            <TotalWrapper>\n              <Label>FailedModuleOutputs</Label>\n              <SubTitle>{statistics.general.totals.failedModuleOutputs}</SubTitle>\n            </TotalWrapper>\n            <TotalWrapper>\n              <Label>FailedVotingResults</Label>\n              <SubTitle>{statistics.general.totals.failedVotingResults}</SubTitle>\n            </TotalWrapper>\n            <TotalWrapper>\n              <Label>SuccessVotingResults</Label>\n              <SubTitle>{statistics.general.totals.successVotingResults}</SubTitle>\n            </TotalWrapper>\n          </SubTotalsWrapper>\n        </TotalsWrapper>\n        <ChartsWrapper>\n          <SubTitle>Charts</SubTitle>\n          <ChartTitle>ModulesStatusByIteration</ChartTitle>\n          <ChartWrapper>\n            <SubChartWrapper>\n              <BarChart\n                width={800}\n                height={300}\n                data={statistics.statisticsPerIteration}\n                margin={{\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 5,\n                }}\n              >\n                <Tooltip />\n                <CartesianGrid strokeDasharray=\"12 8\" />\n                <XAxis stroke={PureWhite} dataKey=\"iteration\" />\n                <YAxis stroke={PureWhite} />\n                <Legend verticalAlign=\"bottom\"  wrapperStyle={{ lineHeight: '40px' }} />\n                <ReferenceLine y={0} stroke=\"#000\" />\n                <Bar dataKey=\"failedModuleOutputs\" fill={WarningColor} />\n              </BarChart>\n            </SubChartWrapper>\n          </ChartWrapper>\n        </ChartsWrapper>\n      </Wrapper>\n    );\n\n  return (\n    <Wrapper>\n      <TitleWrapper>\n        <Title>Statistics</Title>\n        <SubTitle>You must run to generate statistics!</SubTitle>\n      </TitleWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Statistics;\n","import styled from \"styled-components\";\nimport { PureWhite } from \"../../utils\";\n\nconst defaultChartWidth = 850;\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  padding-top: 48px;\n`;\n\nexport const TitleWrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const SubWrapper = styled.div`\n  flex-direction: column;\n  padding: 24px 0;\n  justify-content: center;\n`;\n\nexport const Title = styled.h1``;\n\nexport const SubTitle = styled.h3``;\n\nexport const TopicWrapper = styled.div`\n  justify-content: center;\n  padding: 24px;\n`;\n\nexport const Topic = styled.h2``;\n\nexport const PercentagesWrapper = styled.div`\n  justify-content: space-evenly;\n`;\n\nexport const TotalsWrapper = styled.div`\n  justify-content: space-evenly;\n`;\n\nexport const TotalsSubWrapper = styled.div`\n  flex-direction: column;\n`;\n\nexport const PercentageWrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n  border: 2px solid ${PureWhite};\n  border-radius: 6px;\n  padding: 6px;\n  margin: 12px;\n`;\n\nexport const TotalWrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n  border: 2px solid ${PureWhite};\n  border-radius: 6px;\n  padding: 6px;\n  margin: 12px;\n`;\n\nexport const Label = styled.h4``;\n\nexport const SubLabel = styled.h5``;\n\nexport const ChartWrapper = styled.div`\n  width: 100%;\n  padding-top: 24px;\n  flex-direction: column;\n  align-items: center;\n  overflow-x: auto;\n\n  @media (max-width: ${defaultChartWidth}px){\n    align-items: unset;\n  }\n`;\n\nexport const SubChartWrapper = styled.div`\n  display: flex;\n  width: ${defaultChartWidth}px;\n  justify-content: center;\n`;\n\nexport const ChartArrayWrapper = styled.div`\n  flex-direction: column;\n`;\n\nexport const ChartTitle = styled.h3``;\n","import React, { FC } from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ReferenceLine, Tooltip, XAxis, YAxis } from 'recharts';\nimport TMRResult from '../../lib/tmr/TMRResult';\nimport { PureWhite, WarningColor } from '../../utils';\nimport { SubTitle, SubWrapper, TitleWrapper, Title, Topic, TopicWrapper, Wrapper, PercentagesWrapper, PercentageWrapper, Label, SubLabel, TotalsWrapper, TotalWrapper, TotalsSubWrapper, ChartWrapper, SubChartWrapper, ChartArrayWrapper, ChartTitle } from './styles';\n\ntype Props = {\n  benchmarkingResults?: TMRResult[];\n};\n\nconst Benchmarking: FC<Props> = ({ benchmarkingResults }) =>\n  benchmarkingResults\n  ? (\n    <Wrapper>\n      <TitleWrapper>\n        <Title>Benchmark</Title>\n        <SubTitle>over different voting methods</SubTitle>\n      </TitleWrapper>\n      <SubWrapper>\n        <TopicWrapper>\n          <Topic>SuccessPercentage</Topic>\n        </TopicWrapper>\n        <PercentagesWrapper>\n          {benchmarkingResults.map((item) => (\n            <PercentageWrapper>\n              <Label>{item.votingMethod}</Label>\n              <SubLabel>{item.statistics?.general.successPercentage.toFixed(2)}%</SubLabel>\n            </PercentageWrapper>\n          ))}\n        </PercentagesWrapper>\n      </SubWrapper>\n      <SubWrapper>\n        <TopicWrapper>\n          <Topic>Totals</Topic>\n        </TopicWrapper>\n        <TotalsWrapper>\n          {benchmarkingResults.map((item) => (\n            <TotalsSubWrapper>\n              <TotalWrapper>\n                <Label>{item.votingMethod}</Label>\n                <Label>failedModuleOutputs</Label>\n                <SubLabel>{item.statistics?.general.totals.failedModuleOutputs}</SubLabel>\n              </TotalWrapper>\n              <TotalWrapper>\n                <Label>{item.votingMethod}</Label>\n                <Label>failedVotingResults</Label>\n                <SubLabel>{item.statistics?.general.totals.failedVotingResults}</SubLabel>\n              </TotalWrapper>\n              <TotalWrapper>\n                <Label>{item.votingMethod}</Label>\n                <Label>successVotingResults</Label>\n                <SubLabel>{item.statistics?.general.totals.successVotingResults}</SubLabel>\n              </TotalWrapper>\n            </TotalsSubWrapper>\n          ))}\n        </TotalsWrapper>\n      </SubWrapper>\n      <SubWrapper>\n        <TopicWrapper>\n          <Topic>Charts</Topic>\n        </TopicWrapper>\n        <ChartArrayWrapper>\n          {benchmarkingResults.map((item) => (\n            <ChartWrapper>\n              <ChartTitle>failedModuleOutputs ({item.votingMethod})</ChartTitle>\n              <SubChartWrapper>\n                <BarChart\n                  width={800}\n                  height={300}\n                  data={item.statistics?.statisticsPerIteration}\n                  margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                  }}\n                >\n                  <Tooltip />\n                  <CartesianGrid strokeDasharray=\"12 8\" />\n                  <XAxis stroke={PureWhite} dataKey=\"iteration\" />\n                  <YAxis stroke={PureWhite} />\n                  <Legend verticalAlign=\"bottom\"  wrapperStyle={{ lineHeight: '40px' }} />\n                  <ReferenceLine y={0} stroke=\"#000\" />\n                  <Bar dataKey=\"failedModuleOutputs\" fill={WarningColor} />\n                </BarChart>\n              </SubChartWrapper>\n            </ChartWrapper>\n          ))}\n        </ChartArrayWrapper>\n      </SubWrapper>\n    </Wrapper>\n  ) : null;\n\nexport default Benchmarking;\n","import styled from 'styled-components';\nimport { GradientPrimary, GradientSecondary } from '../../utils';\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  background: linear-gradient(0deg, ${GradientPrimary} 0%, ${GradientSecondary} 100%);\n`;\n\nexport const Text = styled.p`\n  font-weight: 300;\n  font-size: 2rem;\n  margin: 12px 0;\n  text-align: center;\n`;\n\nexport const ColaboratorsWrapper = styled.div`\n  justify-content: space-around;\n  flex-wrap: wrap;\n  padding: 12px 0;\n`;\n\nexport const AvatarWrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Avatar = styled.img`\n  height: 100px;\n  width: 100px;\n  border-radius: 50px;\n`;\n\nexport const Name = styled.p`\n  margin: 6px;\n`;\n","import React, { FC } from 'react';\nimport { Avatar, AvatarWrapper, ColaboratorsWrapper, Wrapper, Text, Name } from './styles';\n\ntype Props = {};\n\nconst contributors = [\n  {\n    image: \"https://avatars.githubusercontent.com/u/61251953?v=4\",\n    name: 'Gabão',\n  },\n  {\n    image: \"https://avatars.githubusercontent.com/u/42523274?v=4\",\n    name: 'Bruno Cabelleira dos Santos',\n  }\n];\n\nconst Colaborators: FC<Props> = () => {\n  return (\n    <Wrapper>\n      <Text>\n        The people who helped this project come true are:\n      </Text>\n      <ColaboratorsWrapper>\n        {contributors.map((item) => (\n          <AvatarWrapper>\n            <Avatar src={item.image} />\n            <Name>{item.name}</Name>\n            </AvatarWrapper>\n        ))}\n      </ColaboratorsWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Colaborators;\n","import styled from 'styled-components';\nimport { GradientPrimary, GradientSecondary } from './utils';\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  background: rgb(0,0,0);\n  background: linear-gradient(352deg, ${GradientSecondary} 20%, ${GradientPrimary} 100%);\n  padding: 12px 6px;\n  min-height: 100vh;\n`;\n\nexport const ConfigTitle = styled.h1`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n`;\n\nexport const ConfigWrapper = styled.div`\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  min-height: 400px;\n`;\n\nexport const ButtonWrapper = styled.div`\n  justify-content: center;\n`;\n\nexport const RunButton = styled.button`\n  display: flex;\n  justify-content: center;\n  margin: 24px;\n  background: rgb(0,0,0);\n  background-color: #00000099;\n  border-radius: 6px;\n  padding: 24px;\n  font-size: 2rem;\n  transition: 0.3s;\n\n  &:hover {\n    cursor: pointer;\n    background-color: #ffffff55;\n  }\n`;\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Benchmarking, Colaborators, InputGeneratorConfig, OperationModuleConfig, Results, RunConfig, Statistics } from './components';\nimport { StoreKeyNames } from './stores';\nimport TMRStore from './stores/tmr.store';\nimport { ButtonWrapper, ConfigTitle, ConfigWrapper, RunButton, Wrapper } from './styles';\nimport { OperationFunctionsKeys, VotingMethodsFunctionsKeys } from './utils';\n\ntype Props = {\n  tmrStore?: TMRStore;\n};\n\nconst App: React.FC<Props> = ({ tmrStore }) => {\n\n  const handleOperationNameChange = ( operationName: OperationFunctionsKeys ): void => {\n    tmrStore?.setOperationModuleConfig({ operationName });\n  };\n\n  const handleVotingMethodChange = ( votingMethod: VotingMethodsFunctionsKeys ): void => {\n    tmrStore?.setTMRRunConfig({ votingMethod })\n  };\n\n  const handleIterationsChange = ( iterations: number ): void => {\n    tmrStore?.setTMRRunConfig({ iterations })\n  };\n\n  const handleMaxMinChange = (iterations: number, minOrMax: \"minimum\" | \"maximum\"): void => {\n    tmrStore?.setInputGeneratorConfig({ [minOrMax]: iterations });\n  };\n\n  const handleDeviationChanceChange = (deviationChance: number): void => {\n    tmrStore?.setOperationModuleConfig({ deviationChance });\n  };\n\n  const handleDeviationMaxThresholdChange = (deviationMaxThreshold: number): void => {\n    tmrStore?.setOperationModuleConfig({ deviationMaxThreshold });\n  };\n\n  const handleDeviationMinThresholdChange = (deviationMinThreshold: number): void => {\n    tmrStore?.setOperationModuleConfig({ deviationMinThreshold });\n  };\n\n  const handleModulesPerIterationChange = (modules: number): void => {\n    tmrStore?.setModulesPerIteration(modules);\n  };\n\n  const handleClick = async () => {\n    try {\n      await tmrStore?.run();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <Wrapper>\n          <ConfigTitle>Setup</ConfigTitle>\n          <ConfigWrapper>\n            <InputGeneratorConfig\n              maxValue={tmrStore?.inputGeneratorConfig.maximum}\n              minValue={tmrStore?.inputGeneratorConfig.minimum}\n              onChangeMaxValue={(iterations) => handleMaxMinChange(iterations, \"maximum\")}\n              onChangeMinValue={(iterations) => handleMaxMinChange(iterations, \"minimum\")}\n            />\n            <OperationModuleConfig\n              operationValue={tmrStore?.operationModuleConfig.operationName}\n              handleOperationNameChange={handleOperationNameChange}\n              deviationChanceValue={tmrStore?.operationModuleConfig.deviationChance}\n              handleDeviationChanceChange={handleDeviationChanceChange}\n              handleDeviationMaxThresholdChange={handleDeviationMaxThresholdChange}\n              handleDeviationMinThresholdChange={handleDeviationMinThresholdChange}\n              deviationMaxThresholdValue={tmrStore?.operationModuleConfig.deviationMaxThreshold}\n              deviationMinThresholdValue={tmrStore?.operationModuleConfig.deviationMinThreshold}\n            />\n            <RunConfig\n              handleVotingChange={handleVotingMethodChange}\n              votingValue={tmrStore?.tmrConfig.votingMethod}\n              iterationsValue={tmrStore?.tmrConfig.iterations}\n              handleIterationChange={handleIterationsChange}\n              handleModulePerIterationChange={handleModulesPerIterationChange}\n              modulePerIterationValue={tmrStore?.modulesPerIteration}\n            />\n          </ConfigWrapper>\n          <ButtonWrapper>\n          <RunButton onClick={() => handleClick()}>Run</RunButton>\n          </ButtonWrapper>\n        <Results results={tmrStore?.results} />\n        <Statistics statistics={tmrStore?.statistics} />\n        <Benchmarking benchmarkingResults={tmrStore?.benchmarkingResults} />\n      </Wrapper>\n      <Colaborators />\n    </>\n  );\n};\n\nconst tmr: StoreKeyNames = 'tmrStore';\n\nexport default inject(tmr)(observer(App));\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { action, makeAutoObservable, observable } from 'mobx';\nimport { persist } from 'mobx-persist';\n\nexport default class OtherStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  @persist('object')\n  @observable\n  local?: string;\n\n  @persist('object')\n  @observable\n  altitude?: number;\n\n  @action\n  setLocal = (local: string): void => {\n    this.local = local;\n  };\n\n  @action\n  setAltitude = (altitude: number): void => {\n    this.altitude = altitude;\n  };\n}\n","import IInputGeneratorConfig from \"./IInputGeneratorConfig\";\n\nexport default class InputGeneratorConfig implements IInputGeneratorConfig{\n    public maximum: number = 99999\n    public minimum: number = 0\n}","import IInputGenerator from \"./IInputGenerator\";\nimport IInputGeneratorConfig from \"./IInputGeneratorConfig\";\nimport InputGeneratorConfig from \"./InputGeneratorConfig\";\n/**\n * Classe responsável por gerar os valores e funções aleatórias que serão aplicadas nos módulos\n * Redundantes do TMR\n */\nexport default class InputGenerator implements IInputGenerator\n{\n    private _config: IInputGeneratorConfig;\n\n    constructor(config?: IInputGeneratorConfig, ) {\n        this._config = config ?? new InputGeneratorConfig()\n    }\n\n    public GenerateRandomInput(): number {\n        return Math.random() * (this._config.maximum - this._config.minimum + 1) + this._config.minimum \n    }\n}\n\n\n\n","export default class TMRResultStatistics{\n    \n    public general: {\n        /** Porcentagem total de Votos com sucesso (acertou o valor experado) */\n        successPercentage: number\n\n        /** Informações do totais estatísticos */\n        totals: { \n            /** Quantidade de Módulos que tiveram erro ao processar um valor */\n            failedModuleOutputs: number, \n\n            /** Quantidade Total de Votos incorretos nas iterações */\n            failedVotingResults: number, \n\n            /** Quantidade Total de Votos Corretos nas iterações */\n            successVotingResults: number \n        }\n    } = { successPercentage: 0,totals: { failedModuleOutputs: 0, failedVotingResults: 0, successVotingResults: 0} }\n  \n\n    public statisticsPerIteration: {\n        failedModuleOutputs: number;\n        iteration: string;\n    }[] = []\n}","import { VotingMethodsFunctionsKeys } from \"../../utils\";\nimport ModuleIterationResult from \"./ModuleIterationResult\"\nimport IOperationModuleConfig from \"./OperationModule/IOperationModuleConfig\"\nimport TMRResultStatistics from './Statistics/TMRResultStatistics'\nexport default class TMRResult{\n    public operationModuleConfig: IOperationModuleConfig = {\n        deviationChance: 0,\n        deviationMaxThreshold: 0,\n        deviationMinThreshold: 0,\n        operationName: 'double',\n    };\n    public votingMethod: VotingMethodsFunctionsKeys = \"averageVoting\";\n    public iterationResult: Array<ModuleIterationResult> = [];\n\n    public statistics?: TMRResultStatistics\n\n    public GenerateStatistics(): TMRResultStatistics{\n        var result = new TMRResultStatistics();\n\n        result.general.successPercentage = this.iterationResult.filter(item => item.voterResult === item.expectedResult).length / this.iterationResult.length * 100\n         \n \n        //Estatísticas de cada iteração\n        this.iterationResult.forEach((item, index) => {\n            var failedModulesInIteration = item.processedOutputs.filter(moduleOutput => moduleOutput !== item.expectedResult).length\n            result.general.totals.failedModuleOutputs += failedModulesInIteration\n            item.expectedResult !== item.voterResult && result.general.totals.failedVotingResults++\n            item.expectedResult === item.voterResult && result.general.totals.successVotingResults++\n\n            \n            result.statisticsPerIteration.push({failedModuleOutputs: failedModulesInIteration, iteration: `Iteration ${index + 1}`})\n        })\n\n\n        this.statistics = result;\n        return this.statistics;\n    }\n\n    \n}","import { votingMethodsFunctions, VotingMethodsFunctionsKeys } from \"../../../utils\";\nimport IVoter from \"./IVoter\";\nexport default class Voter implements IVoter {\n\n    DoVote(outputs: number[], votingMethod: VotingMethodsFunctionsKeys): number {\n        return votingMethodsFunctions[votingMethod](outputs);\n    }\n}\n","/* eslint-disable no-loop-func */\nimport IoperationModule from \"./OperationModule/IOperationModule\";\nimport ITMR from \"./ITMR\";\nimport IInputGenerator from \"./InputGenerator/IInputGenerator\";\nimport IOperationModuleConfig from \"./OperationModule/IOperationModuleConfig\";\nimport TMRRunConfig from \"./TMRRunConfig\";\nimport TMRResult from \"./TMRResult\";\nimport InputGenerator from \"./InputGenerator/InputGenerator\";\nimport Voter from \"./Voter/Voter\";\nimport IVoter from \"./Voter/IVoter\";\nimport ModuleIterationResult from \"./ModuleIterationResult\";\nimport IOperationModule from \"./OperationModule/IOperationModule\";\nimport { operationFunctions } from \"../../utils\";\n\n\nexport default class TMR implements ITMR {\n    private _inputGenerator: IInputGenerator = {\n        GenerateRandomInput: () => 0\n    }\n    private _modules: IoperationModule[] = []\n    private _currentOperationModuleConfig: IOperationModuleConfig\n    private _voter: IVoter = new Voter()\n    public constructor(defaultOperationModuleConfig: IOperationModuleConfig){\n        this._currentOperationModuleConfig = defaultOperationModuleConfig\n    }\n\n    get inputGenerator(){\n        return this._inputGenerator\n    }\n    set inputGenerator(inputGenerator: IInputGenerator){\n        this._inputGenerator = inputGenerator\n    }\n \n\n    public AddOperationModule(...operationModule: IOperationModule[]): void {\n        operationModule.forEach(module => module.configuration = this._currentOperationModuleConfig)\n        this._modules.push(...operationModule)\n    }\n\n    public RemoveOperationModule(operationModule: IOperationModule): void {\n        this._modules = this._modules.filter(obj => obj !== operationModule);\n    }\n\n    public SetModulesConfiguration(operationModuleConfig: IOperationModuleConfig){\n        this._modules.forEach(module => module.configuration = operationModuleConfig)\n        this._currentOperationModuleConfig = operationModuleConfig\n    }\n\n    public async Run(runConfig: TMRRunConfig): Promise<TMRResult>{\n        if (this.inputGenerator == null)\n            this.inputGenerator = new InputGenerator()\n            \n        var runResult = new TMRResult();\n        runResult.votingMethod = runConfig.votingMethod;\n        runResult.operationModuleConfig = { ...this._currentOperationModuleConfig }\n\n        for (var i = 0; i < runConfig.iterations; i++){\n            var randomInput = this._inputGenerator.GenerateRandomInput()\n            var iterationOutputs: number[] = []\n            //Executa todos os módulos\n            this._modules.forEach(module => iterationOutputs.push(module.DoOperation(randomInput)))\n            var votingResult = this._voter.DoVote(iterationOutputs, runConfig.votingMethod)\n\n            var iterationResult: ModuleIterationResult = {\n                input: randomInput,\n                expectedResult: operationFunctions[this._currentOperationModuleConfig.operationName](randomInput),\n                processedOutputs: iterationOutputs,\n                voterResult: votingResult\n            }\n\n            runResult.iterationResult.push(iterationResult)\n        }\n\n        runResult.GenerateStatistics()\n        return runResult\n    }\n}","import { action, makeAutoObservable, observable } from 'mobx';\nimport { persist } from 'mobx-persist';\nimport InputGenerator from '../lib/tmr/InputGenerator/InputGenerator';\nimport TMR from '../lib/tmr/TMR';\nimport TMRResult from '../lib/tmr/TMRResult';\nimport { getModulesPerIteration, votingMethodsFunctions, VotingMethodsFunctionsKeys } from '../utils';\nimport { OperationModuleType } from '../utils/types';\nimport { TMRRunConfigType } from '../utils/types/Run';\n\nconst votingMethods = Object.keys(votingMethodsFunctions);\n\nexport default class TMRStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n\n  @persist('object')\n  @observable\n  inputGeneratorConfig: InputGeneratorType = { maximum: 100, minimum: 1 };\n\n  @persist('object')\n  @observable\n  operationModuleConfig: OperationModuleType = {\n    deviationChance: 20,\n    deviationMaxThreshold: 15,\n    deviationMinThreshold: 5,\n    operationName: 'double',\n  };\n\n  @persist('object')\n  @observable\n  tmrConfig: TMRRunConfigType = { iterations: 5, votingMethod: \"averageVoting\" }\n\n  @persist('object')\n  @observable\n  modulesPerIteration: number = 5;\n\n  @persist('object')\n  @observable\n  results?: ModuleIterationResultType[];\n\n  @persist('object')\n  @observable\n  statistics?: TMRResultStatistics;\n\n  @persist('object')\n  @observable\n  benchmarkingResults?: TMRResult[];\n\n  @action\n  setModulesPerIteration = (modules: number) => {\n    this.modulesPerIteration = modules;\n  };\n\n  @action\n  setInputGeneratorConfig = (config: Partial<InputGeneratorType>) => {\n    this.inputGeneratorConfig = {...this.inputGeneratorConfig, ...config};\n  };\n\n  @action\n  setOperationModuleConfig = (config: Partial<OperationModuleType>) => {\n    this.operationModuleConfig = {...this.operationModuleConfig, ...config};\n  };\n\n  @action\n  setTMRRunConfig = (config: Partial<TMRRunConfigType>) => {\n    this.tmrConfig = {...this.tmrConfig, ...config};\n  };\n\n  @action\n  setResults = (results: ModuleIterationResultType[]) => {\n    this.results = results;\n  };\n\n  @action\n  setStatistics = (statistics?: TMRResultStatistics) => {\n    this.statistics = statistics;\n  };\n\n  @action\n  setBenchmarkingData = (benchmarkingResults: TMRResult[]): void => {\n    this.benchmarkingResults = benchmarkingResults;\n  };\n\n  @action\n  generateVotingMethodCoparisonResult = async () => {\n    const comparisonResults: TMRResult[] = [];\n    votingMethods.map(async (key) => {\n      if(key !== this.tmrConfig.votingMethod) {\n        const tmr = new TMR(this.operationModuleConfig);\n        const modules = getModulesPerIteration(this.modulesPerIteration);\n\n        tmr.AddOperationModule(...modules);\n        tmr.inputGenerator = new InputGenerator({ maximum: 50, minimum: 1});\n\n        const results = await tmr.Run({ ...this.tmrConfig, votingMethod: key as VotingMethodsFunctionsKeys });\n\n        comparisonResults.push(results);\n        this.setBenchmarkingData(comparisonResults);\n      }\n    });\n    console.log(comparisonResults);\n  };\n\n  @action\n  run = async (): Promise<void> => {\n    const tmr = new TMR(this.operationModuleConfig);\n    const modules = getModulesPerIteration(this.modulesPerIteration);\n\n    tmr.AddOperationModule(...modules);\n    tmr.inputGenerator = new InputGenerator({ maximum: 50, minimum: 1});\n\n    const results = await tmr.Run(this.tmrConfig);\n\n    this.generateVotingMethodCoparisonResult();\n\n    this.setResults(results.iterationResult);\n    this.setStatistics(results.statistics);\n  };\n}\n","import { action, makeAutoObservable, observable } from 'mobx';\nimport { persist } from 'mobx-persist';\n\nexport default class UserStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  @persist('object')\n  @observable\n  nome?: string;\n\n  @persist('object')\n  @observable\n  idade?: number;\n\n  @action\n  setIdade = (idade: number): void => {\n    this.idade = idade;\n  };\n\n  @action\n  setNome = (nome: string): void => {\n    this.nome = nome;\n  };\n}\n","import { create } from 'mobx-persist';\nimport OtherStore from './other.store';\nimport TMRStore from './tmr.store';\nimport UserStore from './user.store';\n\nclass GlobalStore {\n  otherStore: OtherStore;\n\n  userStore: UserStore;\n\n  tmrStore: TMRStore;\n\n  constructor() {\n    this.otherStore = new OtherStore();\n    this.userStore = new UserStore();\n    this.tmrStore = new TMRStore();\n  }\n}\n\nexport type StoreKeyNames = keyof GlobalStore;\n\nconst user: StoreKeyNames = 'userStore';\nconst other: StoreKeyNames = 'otherStore';\nconst tmr: StoreKeyNames = 'tmrStore';\n\nconst globalStore = new GlobalStore();\nconst hydrate = create({\n  storage: localStorage,\n});\n\nhydrate(user, globalStore.userStore);\nhydrate(other, globalStore.otherStore);\nhydrate(tmr, globalStore.tmrStore);\n\nexport { OtherStore, UserStore, TMRStore };\n\nexport default globalStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport stores from './stores';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider {...stores}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}